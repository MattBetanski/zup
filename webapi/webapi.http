@webapi_HostAddress = http://localhost:5001
// user 1
@jwt = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIxIiwidW5pcXVlX25hbWUiOiJoZWxsb3dvcmxkIiwibmJmIjoxNzE1NDYwMDY4LCJleHAiOjE3MTU3MTkyNjgsImlhdCI6MTcxNTQ2MDA2OCwiYXVkIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIn0.8BrU4zyvOOdOa9rrmRBWVxrwGw765MtHHWNEchmDjE0
// user 2
@jwt2 = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIyIiwidW5pcXVlX25hbWUiOiJoZWxsb3dvcmxkMiIsIm5iZiI6MTcxNTQ2MzU0MiwiZXhwIjoxNzE1NzIyNzQyLCJpYXQiOjE3MTU0NjM1NDIsImF1ZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6NTAwMCJ9.VzG_EbGWWqipnvGD9pVFTDsyw_z6JrqcAz0cf92yemY

POST {{webapi_HostAddress}}/user/create/
Content-Type: application/json

{
    "username": "helloworld2",
    "email": "helloworld2@gmail.com",
    "password": "password",
    "firstName": "hello",
    "lastName": "world"
}
### creates an user

POST {{webapi_HostAddress}}/user/login/
Content-Type: application/json

{
    "username": "helloworld2",
    "password": "password"
}
### logs in user based on credentials

GET {{webapi_HostAddress}}/user/invitations
Authorization: Bearer {{jwt2}}
Accept: application/json
### get all pending invites for user

POST {{webapi_HostAddress}}/department/
Authorization: Bearer {{jwt}}
Content-Type: application/json

{
    "name": "bigworlddepartment",
    "description": "spodermun",
    "visibility": true
}
### creates department

GET {{webapi_HostAddress}}/department?department_id=2
Authorization: Bearer {{jwt}}
Accept: application/json
### gets department based on department id
 
GET {{webapi_HostAddress}}/department/all
Authorization: Bearer {{jwt}}
Accept: application/json
### get all departments the user is in

POST {{webapi_HostAddress}}/department/invite?department_id=2&email=helloworld2@gmail.com
Authorization: Bearer {{jwt}}
### invite a user to the department (must be owner of department)

GET {{webapi_HostAddress}}/department/projects?department_id=2
Authorization: Bearer {{jwt}}
Accept: application/json
### get all the projects in the department

GET {{webapi_HostAddress}}/department/roles?department_id=2
Authorization: Bearer {{jwt}}
Accept: application/json
### get the roles in the department

GET {{webapi_HostAddress}}/department/members?project_id=2
Authorization: Bearer {{jwt}}
Accept: application/json
### get the members of the department with a project id

GET {{webapi_HostAddress}}/department/invitations?department_id=2
Authorization: Bearer {{jwt}}
Accpet: application/json
### get all pending invites for department (must be owner)

DELETE {{webapi_HostAddress}}/department/invite?department_id=2&invitee_id=2
Authorization: Bearer {{jwt}}
###

POST {{webapi_HostAddress}}/project/
Authorization: Bearer {{jwt}}
Content-Type: application/json

{
    "name": "bigworldproject2",
    "description": "me no like",
    "departmentId": 2
}
### creates a project (must be owner of department)

GET {{webapi_HostAddress}}/project?project_id=1
Authorization: Bearer {{jwt}}
Accept: application/json
### get project by id

POST {{webapi_HostAddress}}/project/roles?project_id=2&user_id=2&role_id=1
Authorization: Bearer {{jwt}}
### add a user to a project with a specified role

PUT {{webapi_HostAddress}}/project/roles?project_id=1&user_id=2&role_id=2
Authorization: Bearer {{jwt}}
### change a user's role

POST {{webapi_HostAddress}}/role/
Authorization: Bearer {{jwt}}
Content-Type: application/json

{
    "name": "rizzler",
    "description": "ohio isnt real",
    "departmentId": 2,
    "itemLevel": "Read",
    "wikiLevel": "Modify",
    "wikiDelete": true
}
###

POST {{webapi_HostAddress}}/item/
Authorization: Bearer {{jwt}}
Content-Type: application/json

{
    "name": "invade poland",
    "description": "very very fast",
    "state": "Open",
    "type": "Epic",
    "projectId": 2
}
###

// FOR TESTING ONLY //
PUT {{webapi_HostAddress}}/department/testingadd?user_id=1&department_id=2
Authorization: Bearer {{jwt}}
### add user to department

# v 